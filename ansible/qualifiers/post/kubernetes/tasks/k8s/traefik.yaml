# https://doc.traefik.io/traefik/providers/kubernetes-gateway/
# https://traefik.io/blog/getting-started-with-kubernetes-gateway-api-and-traefik/

---
# https://artifacthub.io/packages/helm/traefik/traefik/
- name: Deploy Traefik
  become: true
  become_user: ubuntu
  kubernetes.core.helm:
    name: traefik
    chart_ref: traefik/traefik
    chart_version: '33.0.0'
    release_namespace: infrastructure
    values:
      providers:
        kubernetesIngress:
          enabled: false
        kubernetesGateway:
          enabled: true
        kubernetesCRD:
          ingressClass: traefik
      externalTrafficPolicy: Local
      metrics:
        prometheus:
          serviceMonitor:
            enabled: true
            additionalLabels:
              release: prometheus
      ingressRoute:
        dashboard:
          enabled: true
      logs:
        general:
          level: INFO
        access:
          enabled: true
          format: json
      deployment:
        replicas: 4
      service:
        enabled: true
        type: NodePort
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: traefik
      ports:
        web:
          nodePort: 30080
        websecure:
          nodePort: 30443
      gateway:
        namespacePolicy: All
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
  tags:
    - services
    - traefik

- name: Create tls certificate secret
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: tls-certificate
        namespace: infrastructure
      data:
        tls.crt: "{{ lookup('file', tls_cert_path) | b64encode }}"
        tls.key: "{{ lookup('file', tls_key_path) | b64encode }}"
  vars:
    tls_cert_path: "../../../../documentation/blue_team/qualifiers/team_{{ team_number }}/certificates/fullchain.crt"
    tls_key_path: "../../../../documentation/blue_team/qualifiers/team_{{ team_number }}/certificates/private.key"
  tags:
    - services
    - traefik

- name: Remove old gateway
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: absent
    definition:
      apiVersion: gateway.networking.k8s.io/v1
      kind: Gateway
      metadata:
        name: traefik-gateway
        namespace: infrastructure
  tags:
    - services
    - traefik

# https://gateway-api.sigs.k8s.io/guides/tls/
- name: Create Traefik Gateway
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: gateway.networking.k8s.io/v1
      kind: Gateway
      metadata:
        name: traefik
        namespace: infrastructure
      spec:
        gatewayClassName: traefik
        listeners:
          - name: http
            port: 8000
            protocol: HTTP
            allowedRoutes:
              namespaces:
                from: All
          - name: https
            port: 8443
            protocol: HTTPS
            allowedRoutes:
              namespaces:
                from: All
            tls:
              mode: Terminate
              certificateRefs:
                - kind: Secret
                  name: tls-certificate
                  namespace: infrastructure
  tags:
    - services
    - traefik
