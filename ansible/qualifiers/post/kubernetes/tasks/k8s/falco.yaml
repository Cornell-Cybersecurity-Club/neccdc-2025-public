---
- name: Falco Sidekick UI secret
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: falco-webui-secret
        namespace: security
      data:
        FALCOSIDEKICK_UI_USER: "{{ 'falco:example-password' | b64encode }}"
  tags:
    - services
    - falco

# https://github.com/falcosecurity/falcosidekick/blob/master/docs/outputs/discord.md
# Secret not actually used by falcosidekick, but it's a place to store the configuration for teams
- name: Falco Sidekick notifications secret
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: falcosidekick-notifications
        namespace: security
      data:
        DISCORD_WEBHOOKURL: "{{ hostvars[inventory_hostname]['discord_webhook_url'][hostvars[inventory_hostname]['team']] | b64encode }}"
        DISCORD_MINIMUMPRIORITY: "{{ 'warning' | b64encode }}"
        DISCORD_ICON: "{{ 'https://repository-images.githubusercontent.com/148756498/427ed700-e6c7-11e9-92dc-995f65aca2e8' | b64encode }}"
  tags:
    - services
    - falco

# https://artifacthub.io/packages/helm/falcosecurity/falco
# https://artifacthub.io/packages/helm/falcosecurity/falcosidekick
# Configure using incubating rules: https://falco.org/docs/reference/rules/default-rules/
- name: Deploy Falco helm
  become: true
  become_user: ubuntu
  kubernetes.core.helm:
    name: falco
    chart_ref: falcosecurity/falco
    chart_version: '4.14.1'
    release_namespace: security
    values_files:
      - /home/ubuntu/falco-rules.yaml
    values:
      tty: true
      serviceAccount:
        create: true
      grafana:
        dashboards:
          enabled: true
          configMaps:
            falco:
              namespace: monitoring
      falcoctl:
        config:
          artifact:
            install:
              refs:
                - falco-rules:3
                - falco-incubating-rules:4
            follow:
              refs:
                - falco-rules:3
                - falco-incubating-rules:4
      falco:
        metrics:
          enabled: true
          interval: 5m
        rules_files:
          - /etc/falco/falco_rules.yaml
          - /etc/falco/falco_rules.local.yaml
          - /etc/falco/falco-incubating_rules.yaml
          - /etc/falco/rules.d
      falcosidekick:
        enabled: true
        replicaCount: 1
        webui:
          enabled: true
          existingSecret: falco-webui-secret
          replicaCount: 1
        redis:
          storageClass: longhorn
          storageSize: 1Gi
        config:
          discord:
            icon: https://repository-images.githubusercontent.com/148756498/427ed700-e6c7-11e9-92dc-995f65aca2e8
            minimumpriority: warning
            webhookurl: "{{ hostvars[inventory_hostname]['discord_webhook_url'][hostvars[inventory_hostname]['team']] }}"
      driver:
        kind: ebpf
      webserver:
        enabled: true
        prometheus_metrics_enabled: true
      metrics:
        enabled: true
        interval: 5m
      serviceMonitor:
        create: true
        labels:
          release: prometheus
  tags:
    - services
    - falco


- name: Create falco http route
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: gateway.networking.k8s.io/v1
      kind: HTTPRoute
      metadata:
        name: falco-http
        namespace: security
      spec:
        parentRefs:
          - name: traefik
            namespace: infrastructure
            sectionName: http
        hostnames:
          - "falco.{{ hostvars[inventory_hostname]['team'] }}.placebo-pharma.com"
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: falco-falcosidekick-ui
                namespace: security
                port: 2802
  tags:
    - services
    - falco

- name: Create falco https route
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: gateway.networking.k8s.io/v1
      kind: HTTPRoute
      metadata:
        name: falco-https
        namespace: security
      spec:
        parentRefs:
          - name: traefik
            namespace: infrastructure
            sectionName: https
        hostnames:
          - "falco.{{ hostvars[inventory_hostname]['team'] }}.placebo-pharma.com"
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: falco-falcosidekick-ui
                namespace: security
                port: 2802
  tags:
    - services
    - falco
