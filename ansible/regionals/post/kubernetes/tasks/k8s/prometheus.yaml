---
# https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack
- name: Deploy prometheus
  become: true
  become_user: ubuntu
  kubernetes.core.helm:
    name: prometheus
    chart_ref: prometheus-community/kube-prometheus-stack
    chart_version: '66.1.1'
    release_namespace: monitoring
    timeout: 3m
    values:
      grafana:
        enabled: true
        persistence:
          enabled: true
          storageClassName: longhorn
          accessModes:
            - ReadWriteOnce
          size: 4Gi
        resources:
          limits:
            cpu: 100m
            memory: 254Mi
          requests:
            cpu: 50m
            memory: 128Mi
        service:
          annotations:
            teleport.dev/name: grafana
            teleport.dev/port: '80'
          labels:
            teleport.dev/proxy: "true"
      alertmanager:
        alertmanagerSpec:
          resources:
            limits:
              cpu: 10m
              memory: 50Mi
            requests:
              cpu: 1m
              memory: 25Mi
      prometheus:
        prometheusSpec:
          resources:
            limits:
              cpu: 200m
              memory: 1000Mi
            requests:
              cpu: 65m
              memory: 500Mi
      prometheusOperator:
        resources:
          limits:
            cpu: 70m
            memory: 200Mi
          requests:
            cpu: 2m
            memory: 100Mi
        admissionWebhooks:
          deployment:
            resources:
              limits:
                cpu: 3m
                memory: 32Mi
              requests:
                cpu: 1m
                memory: 16Mi
          patch:
            resources:
              limits:
                cpu: 3m
                memory: 32Mi
              requests:
                cpu: 1m
                memory: 16Mi
        prometheusConfigReloader:
          resources:
            limits:
              cpu: 3m
              memory: 32Mi
            requests:
              cpu: 1m
              memory: 16Mi
      prometheus-node-exporter:
        service:
          port: 9101
          targetPort: 9100
        resources:
          limits:
            cpu: 10m
            memory: 32Mi
          requests:
            cpu: 2m
            memory: 12Mi
      kube-state-metrics:
        resources:
          limits:
            cpu: 10m
            memory: 200Mi
          requests:
            cpu: 5m
            memory: 24Mi
        sidecar:
          resources:
            limits:
              cpu: 100m
              memory: 254Mi
            requests:
              cpu: 50m
              memory: 128Mi
  tags:
    - services
    - prometheus


- name: Create Grafana http route
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: gateway.networking.k8s.io/v1
      kind: HTTPRoute
      metadata:
        name: grafana-http
        namespace: monitoring
      spec:
        parentRefs:
          - name: traefik
            namespace: infrastructure
            sectionName: http
        hostnames:
          - "grafana.{{ hostvars[inventory_hostname]['team'] }}.placebo-pharma.com"
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: prometheus-grafana
                namespace: monitoring
                port: 80
  tags:
    - services
    - prometheus

- name: Create Grafana https route
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: gateway.networking.k8s.io/v1
      kind: HTTPRoute
      metadata:
        name: grafana-https
        namespace: monitoring
      spec:
        parentRefs:
          - name: traefik
            namespace: infrastructure
            sectionName: https
        hostnames:
          - "grafana.{{ hostvars[inventory_hostname]['team'] }}.placebo-pharma.com"
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: prometheus-grafana
                namespace: monitoring
                port: 80
  tags:
    - services
    - prometheus

- name: Create Prometheus https route
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: gateway.networking.k8s.io/v1
      kind: HTTPRoute
      metadata:
        name: prometheus-https
        namespace: monitoring
      spec:
        parentRefs:
          - name: traefik
            namespace: infrastructure
            sectionName: https
        hostnames:
          - "prometheus.{{ hostvars[inventory_hostname]['team'] }}.placebo-pharma.com"
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: prometheus-kube-prometheus-prometheus
                namespace: monitoring
                port: 9090
  tags:
    - services
    - prometheus
