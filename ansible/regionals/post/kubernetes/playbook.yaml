---
- name: K8s set hostname
  hosts: cluster
  become: true
  vars:
    team_number: "{{ hostvars[inventory_hostname]['team'] }}"
  tasks:
    - name: Set a hostname
      ansible.builtin.hostname:
        name: "{{ hostvars[inventory_hostname]['hostname'] }}"
      tags:
        - hostname

    - name: Update Ubuntu password
      ansible.builtin.user:
        name: ubuntu
        password: "{{ 'example-password' | password_hash('sha512') }}"


- name: Startup Teleport
  hosts: ctrl_plane,node_0,node_1
  become: true
  vars:
    team_number: "{{ hostvars[inventory_hostname]['team'] }}"
    teleport_server_dns_address: teleport.{{ team_number }}.placebo-pharma.com
  tasks:
    - name: Copy teleport configuration template
      ansible.builtin.template:
        src: templates/teleport.yaml.j2
        dest: /etc/teleport.yaml
        mode: '0664'
        owner: root
        group: root
      vars:
        teleport_name: "{{ hostvars[inventory_hostname]['hostname'] }}"
        join_token: "{{ hostvars[inventory_hostname]['teleport_token'] }}"
      tags:
        - teleport

    - name: Restart and enable Teleport
      ansible.builtin.service:
        name: teleport
        state: restarted
        enabled: true
      tags:
        - teleport


- name: K8s base
  hosts: ctrl_plane
  become: true
  vars:
    team_number: "{{ hostvars[inventory_hostname]['team'] }}"
  tasks:
    - name: Create cluster
      ansible.builtin.include_tasks:
        file: "tasks/create_cluster.yaml"

    - name: Setup black team k8s task
      ansible.builtin.include_tasks:
        file: "tasks/k8s_black_team.yaml"
      tags:
        - black-team

    - name: Get join command
      ansible.builtin.shell:
        cmd: kubeadm token create --print-join-command
      register: join_command_raw
      tags:
        - join

    - name: Set join command
      ansible.builtin.set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"
      tags:
        - join


- name: Join worker nodes
  hosts: worker_nodes
  become: true
  vars:
    ctrl_plane_ip: "10.0.{{ hostvars[inventory_hostname]['team'] }}.250"
  tasks:
    - name: Read kubeadm config file
      ansible.builtin.slurp:
        src: /etc/kubernetes/kubeadm-config.yaml
      register: kubeadm_config
      tags:
        - join

    - name: Extract CRI socket value
      ansible.builtin.set_fact:
        cri_socket: "{{ kubeadm_config['content'] | b64decode | regex_search('criSocket:\\s*(.+)', '\\1') | first }}"
      tags:
        - join

    - name: TCP port 6443 on master is reachable from worker
      ansible.builtin.wait_for:
        host: "{{ hostvars[ctrl_plane_ip]['ansible_default_ipv4']['address'] }}"
        port: 6443
        timeout: 1
      tags:
        - join

    - name: Join cluster
      ansible.builtin.shell:
        cmd: "{{ hostvars[ctrl_plane_ip].join_command }} --cri-socket {{ cri_socket }} >> node_joined.log"
      args:
        chdir: /etc/kubernetes
        creates: node_joined.log
      tags:
        - join


- name: Kubernetes deployment
  hosts: ctrl_plane
  become: true
  vars:
    team_number: "{{ hostvars[inventory_hostname]['team'] }}"
    ctrl_plane_ip: "10.0.{{ hostvars[inventory_hostname]['team'] }}.250"
  tasks:
    - name: Install Cilium
      ansible.builtin.include_tasks:
        file: "tasks/cilium.yaml"
      tags:
        - cilium

    - name: Install Traefik
      ansible.builtin.include_tasks:
        file: "tasks/traefik.yaml"
      tags:
        - traefik

    - name: Setup kubernetes services
      ansible.builtin.include_tasks:
        file: "tasks/k8s_services.yaml"
      tags:
        - code
        - falco
        - longhorn
        - pipeline
        - prometheus
        - services
        - teleport
        - website
