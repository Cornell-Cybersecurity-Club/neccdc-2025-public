---
- name: Fetch configurations from Graylog
  ansible.builtin.uri:
    url: "{{ SERVER_API_URL }}/sidecar/configurations"
    method: GET
    headers: &common_headers
      Authorization: "Basic {{ (SERVER_API_USERNAME + ':' + SERVER_API_PASSWORD).encode() | b64encode }}"
      X-Requested-By: "Ansible"
      Content-Type: "application/json"
    return_content: true
    status_code: 200
  register: configurations_response

- name: Update Graylog configurations
  vars:
    configs:
      - name: winlogbeat-default
        template: "../templates/winlogbeat-default.yml.j2"
        override_color: "#f44336"
      - name: filebeat-linux-default
        template: "../templates/filebeat-linux-default.yml.j2"
        override_color: "#4caf50"
      - name: auditbeat-linux-default
        template: "../templates/auditbeat-linux-default.yml.j2"
        override_tags: ["auditbeat"]
        override_color: "#0d47a1"
  block:
    - name: Update each Graylog configuration
      ansible.builtin.uri:
        url: "{{ SERVER_API_URL }}/sidecar/configurations/{{ item.id }}"
        method: PUT
        headers: *common_headers
        body:
          name: "{{ item.name }}"
          template: "{{ lookup('template', (configs | selectattr('name', 'equalto', item.name) | first).template) }}"
          collector_id: "{{ item.collector_id }}"
          color: "{{ (configs | selectattr('name', 'equalto', item.name) | first).override_color | default(item.color | default('#FF0000')) }}"
          tags: "{{ (configs | selectattr('name', 'equalto', item.name) | first).override_tags | default(item.tags | default([])) }}"
        body_format: json
        status_code: 200
      loop: "{{ configurations_response.json.configurations }}"
      loop_control:
        loop_var: item
      when: "item.name in configs | map(attribute='name')"
