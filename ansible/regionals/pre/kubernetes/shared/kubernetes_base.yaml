---
- name: Update APT packages
  ansible.builtin.apt:
    update_cache: true

- name: Install APT Transport HTTPS
  ansible.builtin.apt:
    name: apt-transport-https
    state: present

- name: Disable SWAP (Kubeadm requirement)
  ansible.builtin.shell:
    cmd: swapoff -a

- name: Disable SWAP in fstab (Kubeadm requirement)
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Create an empty file for Kubernetes sysctl params
  ansible.builtin.copy:
    content: ""
    dest: /etc/sysctl.d/99-kubernetes-cri.conf
    force: false
    mode: "0600"

- name: Configure sysctl params for Kubernetes
  ansible.builtin.lineinfile:
    path: /etc/sysctl.d/99-kubernetes-cri.conf
    line: "{{ item }}"
  with_items:
    - 'net.bridge.bridge-nf-call-iptables  = 1'
    - 'net.ipv4.ip_forward                 = 1'
    - 'net.bridge.bridge-nf-call-ip6tables = 1'

- name: Apply sysctl params without reboot
  ansible.builtin.command:
    cmd: sysctl --system

- name: Download Kubernetes apt-key
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
    dest: /tmp/kubernetes.gpg.key
    mode: '0644'

- name: De-armor kubernetes gpg
  ansible.builtin.shell:
    cmd: gpg --dearmor < /tmp/kubernetes.gpg.key > /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /"
    state: present
    filename: pkgs_k8s_io
    update_cache: true

- name: Install kube tools
  ansible.builtin.apt:
    pkg:
      - kubelet=1.32.*
      - kubeadm=1.32.*
    state: latest
    update_cache: true

- name: Enable the Kubelet service
  ansible.builtin.service:
    name: kubelet
    enabled: true

- name: Load overlay kernel module
  community.general.modprobe:
    name: overlay
    state: present

- name: Load br_netfilter kernel module
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: Set bridge-nf-call-iptables
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1

- name: Set ip_forward
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: 1

- name: Install kubernetes python package for ansible
  ansible.builtin.apt:
    pkg:
      - python3
      - python3-pip
      - python3-kubernetes
      - neofetch
    state: present

- name: Kubeadm completion
  block:
    - name: Install kubeadm bash completion
      ansible.builtin.command: kubeadm completion bash
      register: kubeadm_completion
      changed_when: false

    - name: Create kubeadm bash completion file
      ansible.builtin.copy:
        content: "{{ kubeadm_completion.stdout_lines | join('\n') }}"
        dest: /etc/bash_completion.d/kubeadm
        owner: root
        group: root
        mode: '0644'

- name: Create an empty file for Kubeadm configuring
  ansible.builtin.copy:
    content: ""
    dest: /etc/kubernetes/kubeadm-config.yaml
    force: false
    mode: "0600"
