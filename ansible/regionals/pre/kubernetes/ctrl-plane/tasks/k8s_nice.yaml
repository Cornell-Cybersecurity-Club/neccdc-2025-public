---
# https://helm.sh/docs/intro/install/#from-apt-debianubuntu
- name: Helm repository
  block:
    - name: Download Kubernetes key
      ansible.builtin.get_url:
        url: https://baltocdn.com/helm/signing.asc
        dest: /usr/share/keyrings/helm.asc
        mode: '0755'

    - name: Add Kubernetes APT repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/helm.asc] https://baltocdn.com/helm/stable/debian/ all main"
        state: present

- name: Update apt packages
  ansible.builtin.apt:
    update_cache: true

- name: Install helm
  ansible.builtin.apt:
    name: helm
    state: present

- name: Install Helm diff plugin
  become: true
  become_user: ubuntu
  kubernetes.core.helm_plugin:
    plugin_path: https://github.com/databus23/helm-diff
    state: present

- name: Install helm repositories
  block:
    # https://docs.cilium.io/en/stable/installation/k8s-install-kubeadm/
    - name: Add cilium repository
      become: true
      become_user: ubuntu
      kubernetes.core.helm_repository:
        name: cilium
        repo_url: https://helm.cilium.io/

    # https://cert-manager.io/docs/installation/helm/
    - name: Add cert-manager repository
      become: true
      become_user: ubuntu
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: https://charts.jetstack.io

    # https://artifacthub.io/packages/helm/falcosecurity/falco
    - name: Add falco repository
      become: true
      become_user: ubuntu
      kubernetes.core.helm_repository:
        name: falcosecurity
        repo_url: https://falcosecurity.github.io/charts

    # https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack
    - name: Add prometheus stack repository
      become: true
      become_user: ubuntu
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url: https://prometheus-community.github.io/helm-charts

    # https://artifacthub.io/packages/helm/longhorn/longhorn
    - name: Add longhorn repository
      become: true
      become_user: ubuntu
      kubernetes.core.helm_repository:
        name: longhorn
        repo_url: https://charts.longhorn.io

    # https://artifacthub.io/packages/helm/traefik/traefik/
    - name: Add traefik repository
      become: true
      become_user: ubuntu
      kubernetes.core.helm_repository:
        name: traefik
        repo_url: https://traefik.github.io/charts

    # https://charts.releases.teleport.dev/
    - name: Add teleport repository
      become: true
      become_user: ubuntu
      kubernetes.core.helm_repository:
        name: teleport
        repo_url: https://charts.releases.teleport.dev

- name: Install bash-completion
  ansible.builtin.apt:
    name: bash-completion
    state: present

- name: Kubectl completion
  block:
    - name: Install kubectl bash completion
      ansible.builtin.command: kubectl completion bash
      register: kubectl_completion
      changed_when: false

    - name: Create kubectl bash completion file
      ansible.builtin.copy:
        content: "{{ kubectl_completion.stdout_lines | join('\n') }}"
        dest: /etc/bash_completion.d/kubectl
        owner: root
        group: root
        mode: '0644'

- name: Helm completion
  block:
    - name: Install helm bash completion
      ansible.builtin.command: helm completion bash
      register: helm_completion
      changed_when: false

    - name: Create helm bash completion file
      ansible.builtin.copy:
        content: "{{ helm_completion.stdout_lines | join('\n') }}"
        dest: /etc/bash_completion.d/helm
        owner: root
        group: root
        mode: '0644'

# https://github.com/containerd/nerdctl
- name: Install nerdctl
  block:
    - name: Install nerdctl | Download archive
      ansible.builtin.get_url:
        url: "https://github.com/containerd/nerdctl/releases/download/v1.6.2/nerdctl-1.6.2-linux-amd64.tar.gz"
        dest: "/tmp/nerdctl.tar.gz"
        mode: "0600"

    - name: Install nerdctl | Create temporary directory
      ansible.builtin.file:
        path: "/tmp/nerdctl_extracted"
        state: directory
        mode: "0755"

    - name: Install nerdctl | Extract archive
      ansible.builtin.unarchive:
        src: "/tmp/nerdctl.tar.gz"
        dest: "/tmp/nerdctl_extracted"
        remote_src: true

    - name: Install nerdctl | Copy Binary
      ansible.builtin.copy:
        src: "/tmp/nerdctl_extracted/nerdctl"
        dest: "/usr/bin/nerdctl"
        remote_src: true
        owner: root
        group: root
        mode: '0755'

    - name: Install nerdctl | Remove archive
      ansible.builtin.file:
        path: "/tmp/nerdctl.tar.gz"
        state: absent

    - name: Install nerdctl | Remove unarchived files
      ansible.builtin.file:
        path: "/tmp/nerdctl_extracted"
        state: absent

- name: Nerdctl completion
  block:
    - name: Install nerdctl bash completion
      ansible.builtin.command: nerdctl completion bash
      register: nerdctl_completion
      changed_when: false

    - name: Create nerdctl bash completion file
      ansible.builtin.copy:
        content: "{{ nerdctl_completion.stdout_lines | join('\n') }}"
        dest: /etc/bash_completion.d/nerdctl
        owner: root
        group: root
        mode: '0644'

# https://github.com/kubernetes-sigs/cri-tools/blob/master/docs/crictl.md
- name: Install crictl
  block:
    - name: Install crictl | Download archive
      ansible.builtin.get_url:
        url: "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"
        dest: "/tmp/crictl-v1.26.0-linux-amd64.tar.gz"
        mode: '0755'
      tags:
        - crictl

    - name: Install crictl | Extract binary from archive
      ansible.builtin.unarchive:
        src: "/tmp/crictl-v1.26.0-linux-amd64.tar.gz"
        dest: "/usr/local/bin/"
        remote_src: true
      tags:
        - crictl

    - name: Install crictl | Remove archive
      ansible.builtin.file:
        path: "/tmp/crictl-v1.26.0-linux-amd64.tar.gz"
        state: absent
      tags:
        - crictl

# https://github.com/cilium/cilium-cli
- name: Install Cilium-cli
  block:
    - name: Install Cilium-cli | Download archive
      ansible.builtin.get_url:
        url: "https://github.com/cilium/cilium-cli/releases/download/v0.16.24/cilium-linux-amd64.tar.gz"
        dest: "/tmp/cilium-linux-amd64.tar.gz"
        mode: '0755'
      tags:
        - cilium

    - name: Install Cilium-cli | Extract binary from archive
      ansible.builtin.unarchive:
        src: "/tmp/cilium-linux-amd64.tar.gz"
        dest: "/usr/local/bin"
        remote_src: true
      tags:
        - cilium

    - name: Install Cilium-cli | Remove archive
      ansible.builtin.file:
        path: "/tmp/cilium-linux-amd64.tar.gz"
        state: absent
      tags:
        - cilium

# https://docs.cilium.io/en/latest/cheatsheet/#shell-tab-completion
- name: Cilium-cli completion | Generate bash completion
  block:
    - name: Cilium-cli completion | Generate bash completion
      ansible.builtin.command:
        cmd: cilium completion fish
      register: cilium_completion
      changed_when: false

    - name: Cilium-cli completion | Write bash completion file
      ansible.builtin.copy:
        content: "{{ cilium_completion.stdout_lines | join('\n') }}"
        dest: /etc/bash_completion.d/cilium
        owner: root
        group: root
        mode: '0644'

# https://github.com/derailed/k9s/releases
- name: Install k9s from GitHub
  ansible.builtin.apt:
    deb: https://github.com/derailed/k9s/releases/download/v0.32.7/k9s_linux_amd64.deb
