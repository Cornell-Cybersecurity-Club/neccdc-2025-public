---
- name: Kubernetes control plane base
  hosts: packer
  become: true
  vars:
    kubelet_config: /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
    former_employees_data: "{{ lookup('file', '../../../../../documentation/employee_data/former_employees.yaml') | from_yaml }}"
    users_data: "{{ lookup('file', '../../../../../documentation/employee_data/employees.yaml') | from_yaml }}"
  tasks:
    - name: Update APT cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 600
      retries: 5
      delay: 10
      register: apt_update_result
      until: apt_update_result is succeeded

    - name: Install Teleport
      ansible.builtin.include_tasks:
        file: "../shared/teleport.yaml"
      tags:
        - teleport

    - name: Setup containerd
      ansible.builtin.include_tasks:
        file: "../shared/containerd.yaml"

    - name: Setup kubernetes base configuration
      ansible.builtin.include_tasks:
        file: "../shared/kubernetes_base.yaml"

    - name: Install Kubectl
      ansible.builtin.apt:
        name: kubectl=1.32.*
        state: present
        force: true

    - name: Setup nice to have
      ansible.builtin.include_tasks:
        file: "tasks/k8s_nice.yaml"

    - name: Setup zsh shell
      ansible.builtin.include_tasks:
        file: "tasks/zsh.yaml"
      vars:
        zsh_user: ubuntu
      tags:
        - zsh

    - name: Copy K8s manifests
      ansible.builtin.include_tasks:
        file: "tasks/manifests.yaml"
      tags:
        - open-emr
        - pipeline

    - name: Check Kubelet args in Kubelet config
      ansible.builtin.shell:
        cmd: grep "^Environment=\"KUBELET_EXTRA_ARGS=" {{ kubelet_config }} || true
      register: check_args

    - name: Add runtime args in Kubelet config
      ansible.builtin.lineinfile:
        dest: "{{ kubelet_config }}"
        line: >
          Environment="KUBELET_EXTRA_ARGS=--runtime-cgroups=/system.slice/containerd.service
          --container-runtime-endpoint=unix:///run/containerd/containerd.sock"
        insertafter: '\[Service\]'
      when: check_args.stdout == ""

    - name: Setup kubeadm config file
      ansible.builtin.blockinfile:
        path: /etc/kubernetes/kubeadm-config.yaml
        block: |
          apiVersion: kubeadm.k8s.io/v1beta4
          kind: InitConfiguration
          nodeRegistration:
            criSocket: unix:///run/containerd/containerd.sock
          ---
          apiVersion: kubeadm.k8s.io/v1beta4
          kind: ClusterConfiguration
          networking:
            podSubnet: "10.111.0.0/16"
            serviceSubnet: "10.245.0.0/16"
          clusterName: placebopharma
          apiServer:
            extraArgs:
              - name: authorization-mode
                value: Node,RBAC
          ---
          apiVersion: kubelet.config.k8s.io/v1beta1
          kind: KubeletConfiguration
          runtimeRequestTimeout: "15m"
          cgroupDriver: "systemd"
          readOnlyPort: 10255
          authentication:
            webhook:
              enabled: true
          enableContentionProfiling: true
          systemReserved:
            cpu: 100m
            memory: 350M
          kubeReserved:
            cpu: 100m
            memory: 50M
          enforceNodeAllocatable:
            - pods

    - name: Create .kube directory
      ansible.builtin.file:
        path: /home/ubuntu/.kube/
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: "0755"

    - name: Copy traefik helm values file
      ansible.builtin.copy:
        src: templates/traefik.yaml
        dest: "/home/ubuntu/traefik.yaml"
        owner: "ubuntu"
        group: "ubuntu"
        mode: '0644'

    - name: Create IT group
      ansible.builtin.group:
        name: it
        state: present
      tags:
        - users

    - name: Create IT users
      ansible.builtin.user:
        name: "{{ item.username | regex_replace(' ', '.') | lower }}"
        password: "{{ item.password | password_hash('sha512') }}"
        append: true
        groups: "users,it{% if item.position == 'System Administrator' %},sudo{% endif %}"
        shell: '/bin/zsh'
        state: present
      when: item.department == "IT"
      with_items: "{{ users_data.users }}"
      tags:
        - users

    - name: Create former system admin employee account
      ansible.builtin.user:
        name: "{{ item.username | regex_replace(' ', '.') | lower }}"
        password: "{{ item.password | password_hash('sha512') }}"
        append: true
        groups: "users,it,sudo"
        shell: '/bin/bash'
        state: present
      when: item.position == "System Administrator"
      with_items: "{{ former_employees_data.users }}"
      tags:
        - users

    - name: Create former network admin employee account
      ansible.builtin.user:
        name: "{{ item.username | regex_replace(' ', '.') | lower }}"
        password: "{{ item.password | password_hash('sha512') }}"
        append: true
        groups: "users,it,sudo"
        shell: '/bin/bash'
        state: present
      when: item.position == "Network Administrator"
      with_items: "{{ former_employees_data.users }}"
      tags:
        - users

    - name: Setup blackteam task
      ansible.builtin.include_tasks:
        file: "../../../../shared/black_team/main.yaml"
      vars:
        black_team_password: example-password
        black_team_pub_path: '../../../../../documentation/black_team/black-team.pub'
        ssh_service_name: ssh
        shell_override: "/bin/zsh"
        shell_config_override: ".zshrc"
      tags:
        - black-team

    - name: Copy zshrc config file
      ansible.builtin.copy:
        src: templates/zshrc-black-team.tmpl
        dest: "/home/black-team/.zshrc"
        owner: "black-team"
        group: "black-team"
        mode: '0644'
      tags:
        - black-team

    - name: Copy p10k config
      ansible.builtin.copy:
        src: templates/p10k.tmpl
        dest: "/home/black-team/.p10k.zsh"
        owner: "black-team"
        group: "black-team"
        mode: '0644'
      tags:
        - black-team

    - name: Setup fun to have
      ansible.builtin.include_tasks:
        file: "tasks/fun.yaml"
