---
- name: Setup Teleport
  hosts: packer
  become: true
  vars:
    teleport_server_dns_address: teleport.placebo-pharma.com
    teleport_server_name: teleport
    users_data: "{{ lookup('file', '../../../../documentation/employee_data/employees.yaml') | from_yaml }}"
    former_employees_data: "{{ lookup('file', '../../../../documentation/employee_data/former_employees.yaml') | from_yaml }}"
  tasks:
    - name: Set a hostname
      ansible.builtin.hostname:
        name: "{{ teleport_server_name }}"
      tags:
        - hostname

    - name: Install EPEL release
      ansible.builtin.dnf:
        name: epel-release
        state: present

    - name: Install packages
      ansible.builtin.dnf:
        name:
          - yum-utils
          - vim
          - htop
          - python3
          - python3-cryptography
          - python3-pip
          - bind-utils
          - oathtool
          - neofetch
        state: present
        update_cache: true

    - name: Download yq
      ansible.builtin.get_url:
        url: 'https://github.com/mikefarah/yq/releases/download/v4.45.1/yq_linux_arm64'
        dest: "/usr/bin/yq"
        mode: '0755'
        owner: root
        group: root

    - name: Setup fish
      ansible.builtin.include_tasks:
        file: "tasks/fish.yaml"
      tags:
        - fish

    - name: Setup blackteam task
      ansible.builtin.include_tasks:
        file: "../../../shared/black_team/main.yaml"
      vars:
        black_team_password: example-password
        shell_override: /usr/bin/fish
        black_team_pub_path: '../../../../documentation/black_team/black-team.pub'
        root_groups: wheel,adm
      tags:
        - black-team

    # https://docs.aws.amazon.com/systems-manager/latest/userguide/agent-install-rocky.html
    - name: AWS SSM Agent
      block:
        - name: AWS SSM Agent | Install
          ansible.builtin.dnf:
            name: 'https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_arm64/amazon-ssm-agent.rpm'
            state: present
            disable_gpg_check: true
          tags:
            - ssm

        - name: AWS SSM Agent | Start and enable
          ansible.builtin.service:
            name: amazon-ssm-agent
            state: started
            enabled: true
          tags:
            - ssm

    - name: EC2 instance connect
      ansible.builtin.include_tasks:
        file: "tasks/eic.yaml"

    - name: Enable cockpit
      ansible.builtin.service:
        name: cockpit.socket
        state: started
        enabled: true

    - name: Install Teleport
      ansible.builtin.include_tasks:
        file: "tasks/teleport.yaml"
      tags:
        - teleport

    - name: Create Teleport configurations
      ansible.builtin.include_tasks:
        file: "tasks/teleport_configs.yaml"
      tags:
        - teleport_users
        - teleport_misc

    - name: Create Teleport black-team user
      ansible.builtin.include_tasks:
        file: "tasks/teleport_user.yaml"
      vars:
        username: black-team
        password: example-password
        teleport_roles:
          - access
          - editor
          - kube-admin
      tags:
        - black-team
        - teleport_users

    - name: Create admin user
      ansible.builtin.include_tasks:
        file: "tasks/teleport_user.yaml"
      vars:
        username: admin
        password: example-password
        teleport_roles:
          - access
          - editor
          - kube-admin
          - system-admin
      tags:
        - teleport_users

    - name: Create Teleport join tokens
      vars:
        database: SK52P7ZMB375R20BQICC4KKW
        graylog: 1KSP55J35U9O5YQC92PEZ594
        kubernetes_agent: STF5Y7KCA80S7IOHEPUNVB6SRMTX1U78
        kubernetes_ctrl: 98T63LBZWKNR4K8SV3RYNICE
        kubernetes_0: E5AI7J4P7VBR2FTIZIU1CECI
        kubernetes_1: K80957CJJFMSYG9A01RDAW6C
      block:
        - name: Create Teleport join tokens | Database
          ansible.builtin.command:
            cmd: >
              /usr/local/bin/tctl tokens add
                --type node,app
                --app-name Database
                --labels service=database
                --ttl 30d
                --value {{ database }}
          tags:
            - token

        - name: Create Teleport join tokens | Graylog
          ansible.builtin.command:
            cmd: >
              /usr/local/bin/tctl tokens add
                --type node,app
                --app-name Graylog
                --labels service=graylog
                --ttl 30d
                --value {{ graylog }}
          tags:
            - token

        - name: Create Teleport join tokens | Kubernetes agent
          ansible.builtin.command:
            cmd: >
              /usr/local/bin/tctl tokens add
                --type kube,app,discovery
                --app-name Kubernetes
                --labels service=kubernetes
                --ttl 30d
                --value {{ kubernetes_agent }}
          tags:
            - token

        - name: Create Teleport join tokens | Kubernetes control plane
          ansible.builtin.command:
            cmd: >
              /usr/local/bin/tctl tokens add
                --type node
                --app-name KubernetesCtrl
                --labels service=kubernetes
                --ttl 30d
                --value {{ kubernetes_ctrl }}
          tags:
            - token

        - name: Create Teleport join tokens | Kubernetes node 0
          ansible.builtin.command:
            cmd: >
              /usr/local/bin/tctl tokens add
                --type node
                --app-name Kubernetes0
                --labels service=kubernetes
                --ttl 30d
                --value {{ kubernetes_0 }}
          tags:
            - token

        - name: Create Teleport join tokens | Kubernetes node 1
          ansible.builtin.command:
            cmd: >
              /usr/local/bin/tctl tokens add
                --type node
                --app-name Kubernetes1
                --labels service=kubernetes
                --ttl 30d
                --value {{ kubernetes_1 }}
          tags:
            - token

    - name: Loop through users and create groups
      ansible.builtin.group:
        name: "{{ item | regex_replace(' ', '-') | lower }}"
        state: present
      with_items:
        - IT
        - compliance
        - users
      tags:
        - users

    - name: Create IT users
      ansible.builtin.user:
        name: "{{ item.username | regex_replace(' ', '.') | lower }}"
        password: "{{ item.password | password_hash('sha512') }}"
        append: true
        groups: "users,it{% if item.position == 'System Administrator' %},wheel,adm{% endif %}"
        shell: '/bin/bash'
        state: present
      when: item.department == "IT"
      with_items: "{{ users_data.users }}"
      tags:
        - users

    - name: Create compliance auditor users
      ansible.builtin.user:
        name: "{{ item.username | regex_replace(' ', '.') | lower }}"
        password: "{{ item.password | password_hash('sha512') }}"
        append: true
        groups: "users,compliance"
        shell: '/bin/bash'
        state: present
      when: item.position == "Auditor"
      with_items: "{{ users_data.users }}"
      tags:
        - users

    - name: Create former system admin employee account
      ansible.builtin.user:
        name: "{{ item.username | regex_replace(' ', '.') | lower }}"
        password: "{{ item.password | password_hash('sha512') }}"
        append: true
        groups: "users,it,wheel,adm"
        shell: '/bin/bash'
        state: present
      when: item.position == "System Administrator"
      with_items: "{{ former_employees_data.users }}"
      tags:
        - users

    - name: Create former support employee account
      ansible.builtin.user:
        name: "{{ item.username | regex_replace(' ', '.') | lower }}"
        password: "{{ item.password | password_hash('sha512') }}"
        append: true
        groups: "users,it"
        shell: '/bin/bash'
        state: present
      when: item.position == "Support"
      with_items: "{{ former_employees_data.users }}"
      tags:
        - users

    - name: Create Teleport IT users
      ansible.builtin.include_tasks:
        file: "tasks/teleport_user.yaml"
      vars:
        username: "{{ item.username | regex_replace(' ', '.') | lower }}"
        # Teleport has a minimum password requirement of 12 characters, so we pad the password with 0s
        password: "{{ item.password }}{{ '0' * (12 - item.password | length) }}"
        teleport_roles: |
          [
            'employee'
            {% if item.position == 'Database Engineer' %}, 'influxdb-admin'{% endif %}
            {% if item.position == 'System Administrator' %}, 'system-admin', 'windows-admin', 'kube-admin'{% else %}, 'windows'{% endif %}
            {% if item.position == 'Technical Support Manager' %}, 'access', 'editor'{% endif %}
            {% if item.position == 'Security Engineer' %}, 'graylog-admin', 'kubernetes'{% endif %}
            {% if item.position == 'SOC Analyst' %}, 'graylog-admin', 'kubernetes'{% else %}, 'graylog', 'monitoring'{% endif %}
            {% if item.position == 'Operations Security' %}, 'kube-admin'{% endif %}
          ]
      when: item.department == "IT"
      with_items: "{{ users_data.users }}"
      tags:
        - teleport_users

    - name: Create Teleport data science users
      ansible.builtin.include_tasks:
        file: "tasks/teleport_user.yaml"
      vars:
        username: "{{ item.username | regex_replace(' ', '.') | lower }}"
        # Teleport has a minimum password requirement of 12 characters, so we pad the password with 0s
        password: "{{ item.password }}{{ '0' * (12 - item.password | length) }}"
        teleport_roles:
          - employee
          - influxdb
          - monitoring
          - windows
      when: item.position == "Data Scientist"
      with_items: "{{ users_data.users }}"
      tags:
        - teleport_users

    - name: Create Teleport compliance auditor users
      ansible.builtin.include_tasks:
        file: "tasks/teleport_user.yaml"
      vars:
        username: "{{ item.username | regex_replace(' ', '.') | lower }}"
        # Teleport has a minimum password requirement of 12 characters, so we pad the password with 0s
        password: "{{ item.password }}{{ '0' * (12 - item.password | length) }}"
        teleport_roles:
          - employee
          - graylog
          - kubernetes
      when: item.department == "Compliance"
      with_items: "{{ users_data.users }}"
      tags:
        - users

    - name: Create Teleport CTO
      ansible.builtin.include_tasks:
        file: "tasks/teleport_user.yaml"
      vars:
        username: "{{ item.username | regex_replace(' ', '.') | lower }}"
        # Teleport has a minimum password requirement of 12 characters, so we pad the password with 0s
        password: "{{ item.password }}{{ '0' * (12 - item.password | length) }}"
        teleport_roles:
          - employee
          - access
          - windows-admin
          - kubernetes
      when: item.position == "CTO"
      with_items: "{{ users_data.users }}"
      tags:
        - teleport_users


    - name: Create Teleport former IT users
      ansible.builtin.include_tasks:
        file: "tasks/teleport_user.yaml"
      vars:
        username: "{{ item.username | regex_replace(' ', '.') | lower }}"
        # Teleport has a minimum password requirement of 12 characters, so we pad the password with 0s
        password: "{{ item.password }}{{ '0' * (12 - item.password | length) }}"
        teleport_roles: |
          [
            'employee'
            {% if item.position == 'Database Engineer' %}, 'influxdb-admin'{% endif %}
            {% if item.position == 'System Administrator' %}, 'system-admin', 'windows-admin', 'kube-admin'{% else %}, 'windows'{% endif %}
            {% if item.position == 'Technical Support Manager' %}, 'access', 'editor'{% endif %}
            {% if item.position == 'Security Engineer' %}, 'graylog-admin', 'kubernetes'{% endif %}
            {% if item.position == 'SOC Analyst' %}, 'graylog-admin', 'kubernetes'{% else %}, 'graylog', 'monitoring'{% endif %}
            {% if item.position == 'Operations Security' %}, 'kube-admin'{% endif %}
          ]
      when: item.department == "IT"
      with_items: "{{ former_employees_data.users }}"
      tags:
        - teleport_users

    - name: Create Teleport former data science users
      ansible.builtin.include_tasks:
        file: "tasks/teleport_user.yaml"
      vars:
        username: "{{ item.username | regex_replace(' ', '.') | lower }}"
        # Teleport has a minimum password requirement of 12 characters, so we pad the password with 0s
        password: "{{ item.password }}{{ '0' * (12 - item.password | length) }}"
        teleport_roles:
          - employee
          - influxdb
          - monitoring
          - windows
      when: item.position == "Data Scientist"
      with_items: "{{ former_employees_data.users }}"
      tags:
        - teleport_users
